# Generated by Django 4.2.23 on 2025-07-20 10:58

from django.db import migrations, models
import django.db.models.deletion
import datetime

def populate_course_offering(apps, schema_editor):
    """
    Iterate through each Enrollment, create a default CourseOffering for its
    CourseProduct if one doesn't exist, and then link the Enrollment to it.
    """
    Enrollment = apps.get_model('api', 'Enrollment')
    CourseOffering = apps.get_model('api', 'CourseOffering')
    
    offering_cache = {}

    for enrollment in Enrollment.objects.all().select_related('course_product'):
        product = enrollment.course_product
        if not product:
            continue

        if product.id not in offering_cache:
            # Create a generic, back-dated offering for this product
            display_name = f"{product.grade}{product.subject}({product.course_type})"
            offering_name = f"{display_name} - 历史数据"
            offering, created = CourseOffering.objects.get_or_create(
                course_product_id=product.id,
                name=offering_name,
                defaults={
                    'start_date': datetime.date(2024, 1, 1),
                    'end_date': datetime.date(2025, 12, 31),
                    'status': 'completed',
                }
            )
            offering_cache[product.id] = offering
        
        enrollment.course_offering = offering_cache[product.id]
        enrollment.save()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0018_remove_name_from_course_product'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=150, null=True, verbose_name='最后修改人')),
                ('name', models.CharField(max_length=255, verbose_name='开班计划名称')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(verbose_name='结束日期')),
                ('status', models.CharField(choices=[('planning', '计划中'), ('open', '报名中'), ('in_progress', '已开课'), ('completed', '已结束')], default='planning', max_length=20, verbose_name='状态')),
                ('course_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.courseproduct', verbose_name='课程产品')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='enrollment',
            name='course_offering',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.courseoffering', verbose_name='开班计划'),
        ),
        migrations.RunPython(populate_course_offering),
        migrations.RemoveField(
            model_name='enrollment',
            name='course_product',
        ),
        migrations.AlterField(
            model_name='enrollment',
            name='course_offering',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.courseoffering', verbose_name='开班计划'),
        ),
    ]
